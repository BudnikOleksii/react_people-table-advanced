{"version":3,"sources":["types/SortBy.ts","components/NotFoundPage/NotFoundPage.tsx","components/HomePage/HomePage.tsx","components/PersonName/PersonName.tsx","components/PersonRow/PersonRow.tsx","helpers.ts","components/PeopleTable/PeopleTable.tsx","api.ts","components/PeopleContext/PeopleContext.tsx","components/PeoplePage/PeoplePage.tsx","components/Navbar/Navbar.tsx","components/NewPerson/NewPerson.tsx","App.tsx","index.tsx"],"names":["SortBy","NotFoundPage","className","HomePage","PersonName","person","slug","sex","name","search","useLocation","to","pathname","style","color","PersonRow","born","died","fatherName","motherName","mother","father","params","useParams","classNames","fontWeight","PeopleTable","people","useSearchParams","searchParams","setSearchParams","appliedQuery","get","useState","inputQuery","setInputQuery","sortBy","sortOrder","applyQuery","useCallback","debounce","query","visiblePeople","useMemo","filtered","lowerQuery","toLowerCase","filter","includes","filterPeople","sortedPeople","numOrder","Name","Sex","sort","firstPerson","secondPerson","localeCompare","Born","Died","sortPeople","type","placeholder","value","onChange","event","target","map","head","onClick","sortByQuery","appliedSortOrder","handleSortChange","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleContext","createContext","setPeople","errorMessage","PeopleProvider","children","setErrorMessage","useEffect","data","preparedPeople","_","arr","find","catch","contextValue","Provider","PeoplePage","useContext","length","Navbar","role","isActive","defaultPerson","NewPerson","memo","newPerson","setNewPerson","navigate","useNavigate","fathers","mothers","handleNewPersonData","field","onSubmit","preventDefault","test","personToAdd","split","join","required","checked","min","max","Date","getFullYear","Number","disabled","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"2NAAYA,E,2CCECC,EAAmB,kBAC9B,oBAAIC,UAAU,QAAd,6BCDWC,EAAe,kBAC1B,oBAAID,UAAU,QAAd,wB,sDCKWE,EAAwB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC9BC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,IAAKC,EAASH,EAATG,KACXC,EAAWC,cAAXD,OAER,OACE,cAAC,IAAD,CACEE,GAAI,CACFC,SAAS,WAAD,OAAaN,GACrBG,OAAO,GAAD,OAAKA,IAEbI,MAAe,MAARN,EACH,CAAEO,MAAO,kBACT,CAAEA,MAAO,mBAPf,SASGN,KCZMO,EAAuB,SAAC,GAAgB,IAAdV,EAAa,EAAbA,OAEnCC,EAQED,EARFC,KACAC,EAOEF,EAPFE,IACAS,EAMEX,EANFW,KACAC,EAKEZ,EALFY,KACAC,EAIEb,EAJFa,WACAC,EAGEd,EAHFc,WACAC,EAEEf,EAFFe,OACAC,EACEhB,EADFgB,OAGIC,EAASC,cAEf,OACE,qBACE,UAAQ,SAERrB,UAAWsB,IAAW,CACpB,yBAA0BF,EAAOhB,OAASA,IAJ9C,UAOE,6BACE,cAAC,EAAD,CAAYD,OAAQA,MAGtB,6BAAKE,IACL,6BAAKS,IACL,6BAAKC,IACL,6BACGG,EACC,cAAC,EAAD,CACEf,OAAQe,IAGV,mBAAGP,MAAO,CAAEY,WAAY,QAAxB,SAAmCN,GAAc,QAGrD,6BACGE,EACC,cAAC,EAAD,CACEhB,OAAQgB,IAGV,mBAAGR,MAAO,CAAEY,WAAY,QAAxB,SAAmCP,GAAc,UA3BhDZ,I,0BJ3BCN,K,YAAAA,E,UAAAA,E,YAAAA,E,aAAAA,M,KKGL,ICcM0B,EAAyB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvC,EAAwCC,cAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAeF,EAAaG,IAAI,UAAY,GAClD,EAAoCC,mBAASF,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAASP,EAAaG,IAAI,WAAa,GACvCK,EAAYR,EAAaG,IAAI,cAAgB,GAE7CM,EAAaC,sBACjBC,KAAS,SAACC,GAENX,EADEW,GAASL,GAAUC,EACL,CAAEI,QAAOL,SAAQC,aAEjB,MAEjB,KACH,CAACD,EAAQC,IAsBLK,EAAgBC,mBAAQ,WAC5B,IAAMC,EDpDkB,SAACjB,EAAkBc,GAC7C,IAAMI,EAAaJ,EAAMK,cAEzB,OAAOnB,EAAOoB,QAAO,qBAAGvC,KAAH,EAASW,WAAT,EAAqBD,YACP4B,cAAcE,SAASH,MCgDvCI,CAAatB,EAAQI,GAEtC,OD9CsB,SACxBJ,EACAU,EACAD,GAEA,IAAMc,EAAY,YAAOvB,GACnBwB,EAAyB,QAAdd,EAAsB,GAAK,EAE5C,OAAQD,GACN,KAAKpC,EAAOoD,KACZ,KAAKpD,EAAOqD,IACVH,EAAaI,MAAK,SAACC,EAAaC,GAAd,OAChBD,EAAYnB,GAAQqB,cAAcD,EAAapB,IAAWe,KAE5D,MAEF,KAAKnD,EAAO0D,KACZ,KAAK1D,EAAO2D,KACVT,EAAaI,MAAK,SAACC,EAAaC,GAAd,OACfD,EAAYnB,GAAUoB,EAAapB,IAAWe,KAQrD,OAAOD,ECmBEU,CAAWhB,EAAUP,EAAWD,KACtC,CAACL,EAAcK,EAAQC,IAE1B,OACE,qCACE,sBAAKnC,UAAU,uDAAf,UACE,cAAC,IAAD,CACEA,UAAU,mCACVS,GAAG,cAFL,8BAOA,uBACEkD,KAAK,OACL3D,UAAU,kCACV4D,YAAY,SACZC,MAAO7B,EACP8B,SAxCkB,SAACC,GACzB9B,EAAc8B,EAAMC,OAAOH,OAC3BzB,EAAW2B,EAAMC,OAAOH,aA0CtB,wBACE,UAAQ,cACR7D,UAAU,uDAFZ,UAIE,gCACE,+BACG,CAAC,OAAQ,MAAO,OAAQ,QAAQiE,KAAI,SAAAC,GAAI,OACvC,oBAEElE,UAAWsB,IACT,qCADmB,qCAEDa,GAAcD,IAAWgC,EAAKtB,gBAGlDuB,QAAS,kBArDE,SAACC,GACxB,IAAIC,EAAmBlC,EAEnBD,IAAWkC,IACbC,EAAmB,QAGrBzC,EAAgB,CACdW,MAAOV,EACPK,OAAQkC,EACRjC,UAAgC,QAArBkC,EAA6B,OAAS,QA2CxBC,CAAiBJ,EAAKtB,gBAPvC,SASGsB,GARIA,MAWT,wCACA,6CAIJ,gCACG1B,EAAcyB,KAAI,SAAA9D,GAAM,OACvB,cAAC,EAAD,CAAWA,OAAQA,GAAaA,EAAOC,kB,OChG5C,SAASmE,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAM/CI,MAAK,kBAAMC,MATA,wEAUXD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,UAR/B,IAAcP,ECOP,IAAMQ,EAAgBC,wBAA4B,CACvDxD,OAAQ,GACRyD,UAAW,aACXC,aAAc,KAGHC,EAAqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnC,EAA4BtD,mBAAmB,IAA/C,mBAAON,EAAP,KAAeyD,EAAf,KACA,EAAwCnD,mBAAS,IAAjD,mBAAOoD,EAAP,KAAqBG,EAArB,KAEAC,qBAAU,WACRhB,IACGK,MAAK,SAAAY,GACJ,IAAMC,EAAiBD,EAAKvB,KAAI,SAAC9D,EAAQuF,EAAGC,GAAZ,mBAAC,eAC5BxF,GAD2B,IAE9Be,OAAQyE,EAAIC,MAAK,SAAA1E,GAAM,OAAIA,EAAOZ,OAASH,EAAOc,cAClDE,OAAQwE,EAAIC,MAAK,SAAAzE,GAAM,OAAIA,EAAOb,OAASH,EAAOa,mBAGpDkE,EAAUO,MAEXI,MAAMP,KACR,IAEH,IAAMQ,EAAe,CACnBrE,SACAyD,YACAC,gBAGF,OACE,cAACH,EAAce,SAAf,CAAwBlC,MAAOiC,EAA/B,SACGT,KCxCMW,EAAiB,WAC5B,MAAiCC,qBAAWjB,GAApCvD,EAAR,EAAQA,OAAQ0D,EAAhB,EAAgBA,aAEhB,OACE,qCACE,oBAAInF,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGmF,GACC,mBAAG,UAAQ,qBAAqBnF,UAAU,kBAA1C,mCAKAmF,GAAkC,IAAlB1D,EAAOyE,QACvB,mBAAG,UAAQ,kBAAX,+CAKDzE,EAAOyE,OAAS,GAAK,cAAC,EAAD,CAAazE,OAAQA,aCpBxC0E,EAAa,kBACxB,qBACE,UAAQ,MACRnG,UAAU,iCACVoG,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKpG,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAW,gBAAGqG,EAAH,EAAGA,SAAH,OACT/E,IACE,cACA,CAAE,8BAA+B+E,KAGrC5F,GAAG,IAPL,uBAYA,cAAC,IAAD,CACET,UAAW,gBAAGqG,EAAH,EAAGA,SAAH,OACT/E,IACE,cACA,CAAE,8BAA+B+E,KAGrC5F,GAAG,SAPL,iCCjBF6F,G,MAAgB,CACpBhG,KAAM,GACND,IAAK,GACLS,KAAM,EACNC,KAAM,EACNC,WAAY,GACZC,WAAY,GACZb,KAAM,KAGKmG,EAAgBC,gBAAK,WAChC,MAA8BP,qBAAWjB,GAAjCvD,EAAR,EAAQA,OAAQyD,EAAhB,EAAgBA,UAChB,EAAkCnD,mBAASuE,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAwC3E,mBAAS,IAAjD,mBAAOoD,EAAP,KAAqBG,EAArB,KACMqB,EAAWC,cAEXC,EAAUpE,mBAAQ,kBACtBhB,EAAOoB,QAAO,SAAA1C,GAAM,MAAmB,MAAfA,EAAOE,SAC9BoB,GAEGqF,EAAUrE,mBAAQ,kBACtBhB,EAAOoB,QAAO,SAAA1C,GAAM,MAAmB,MAAfA,EAAOE,SAC9BoB,GAEGsF,EAAsB,SAACC,EAAenD,GAC1CyB,EAAgB,IAChBoB,EAAa,2BACRD,GADO,kBAETO,EAAQnD,MAoCb,OACE,uBAAM7D,UAAU,OAAOiH,SAjBJ,SAAClD,GAGpB,GAFAA,EAAMmD,iBAhBF,cAAcC,KAAKV,EAAUnG,OAC/BgF,EAAgB,+CAET,KAGLmB,EAAU1F,KAAO0F,EAAU3F,KAAO,OACpCwE,EAAgB,wCAET,GASU,CACjB,IAAQhF,EAAemG,EAAfnG,KAAMQ,EAAS2F,EAAT3F,KACRsG,EAAmB,2BACpBX,GADoB,IAEvBrG,KAAK,GAAD,OAAKE,EAAK+G,MAAM,KAAKC,KAAK,KAA1B,YAAkCxG,KAGxCoE,EAAU,GAAD,mBAAKzD,GAAL,CAAa2F,KACtBV,EAAaJ,GACbK,EAAS,cAKX,UACGxB,GACC,qBAAKnF,UAAU,0BAAf,SACGmF,IAIL,uBAAOnF,UAAU,QAAjB,SACE,uBACEA,UAAU,QACV2D,KAAK,OACLC,YAAY,OACZ2D,UAAQ,EACR1D,MAAO4C,EAAUnG,KACjBwD,SAAU,SAACC,GACTgD,EAAoB,OAAQhD,EAAMC,OAAOH,YAK/C,sBAAK7D,UAAU,UAAf,UACE,wBAAOA,UAAU,QAAjB,iBAEE,uBACEuH,UAAQ,EACR5D,KAAK,QACLrD,KAAK,MACLuD,MAAM,IACN2D,QAA2B,MAAlBf,EAAUpG,IACnByD,SAAU,SAACC,GAAD,OAAWgD,EAAoB,MAAOhD,EAAMC,OAAOH,QAC7D7D,UAAU,aAId,wBAAOA,UAAU,QAAjB,mBAEE,uBACEuH,UAAQ,EACR5D,KAAK,QACLrD,KAAK,MACLuD,MAAM,IACN2D,QAA2B,MAAlBf,EAAUpG,IACnByD,SAAU,SAACC,GAAD,OAAWgD,EAAoB,MAAOhD,EAAMC,OAAOH,QAC7D7D,UAAU,gBAKhB,wBAAOA,UAAU,QAAjB,iBAEE,uBACE2D,KAAK,SACLC,YAAY,YACZC,MAAO4C,EAAU3F,KACjB2G,IAAK,KACLC,KAAK,IAAIC,MAAOC,cAChB9D,SAAU,SAACC,GACTgD,EAAoB,OAAQc,OAAO9D,EAAMC,OAAOH,SAElD7D,UAAU,aAId,wBAAOA,UAAU,QAAjB,iBAEE,uBACE2D,KAAK,SACLC,YAAY,aACZC,MAAO4C,EAAU1F,KACjB0G,IAAKhB,EAAU3F,KACf4G,KAAK,IAAIC,MAAOC,cAChB9D,SAAU,SAACC,GACTgD,EAAoB,OAAQc,OAAO9D,EAAMC,OAAOH,SAElD7D,UAAU,QACV8H,UAAWrB,EAAU3F,UAIzB,uBAAOd,UAAU,SAAjB,SACE,yBACE6D,MAAO4C,EAAUzF,WACjB8C,SAAU,SAAAC,GACRgD,EAAoB,aAAchD,EAAMC,OAAOH,QAHnD,UAME,wBAAQA,MAAM,GAAGiE,UAAQ,EAAzB,6BACCjB,EAAQ5C,KAAI,gBAAG3D,EAAH,EAAGA,KAAMF,EAAT,EAASA,KAAT,OACX,wBAAmByD,MAAOvD,EAA1B,SAAiCA,GAApBF,WAKnB,uBAAOJ,UAAU,SAAjB,SACE,yBACE6D,MAAO4C,EAAUxF,WACjB6C,SAAU,SAAAC,GACRgD,EAAoB,aAAchD,EAAMC,OAAOH,QAHnD,UAME,wBAAQA,MAAM,GAAGiE,UAAQ,EAAzB,6BACChB,EAAQ7C,KAAI,gBAAG3D,EAAH,EAAGA,KAAMF,EAAT,EAASA,KAAT,OACX,wBAAmByD,MAAOvD,EAA1B,SAAiCA,GAApBF,WAKnB,wBACEJ,UAAU,oBACV2D,KAAK,SACLmE,UAAWrB,EAAUnG,OAASmG,EAAUpG,MAAQoG,EAAU3F,KAH5D,oCCzKOiH,EAAU,kBACrB,cAAC,EAAD,UACE,sBAAK/H,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgI,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUxH,GAAG,IAAIyH,SAAO,MACpD,cAAC,IAAD,CAAOF,KAAK,SAASC,QAAS,cAAC,EAAD,IAA9B,SACE,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,QAE/B,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eCjBjCE,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,S","file":"static/js/main.3ebb8a64.chunk.js","sourcesContent":["export enum SortBy {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","import { FC } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonName: FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n  const { search } = useLocation();\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${slug}`,\n        search: `${search}`,\n      }}\n      style={sex === 'f'\n        ? { color: 'rgb(255, 0, 0)' }\n        : { color: 'rgb(0, 71, 171)' }}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonName } from '../PersonName';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonRow: FC<Props> = ({ person }) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    mother,\n    father,\n  } = person;\n\n  const params = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={classNames({\n        'has-background-warning': params.slug === slug,\n      })}\n    >\n      <td>\n        <PersonName person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonName\n            person={mother}\n          />\n        ) : (\n          <p style={{ fontWeight: 'bold' }}>{motherName || '-'}</p>\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonName\n            person={father}\n          />\n        ) : (\n          <p style={{ fontWeight: 'bold' }}>{fatherName || '-'}</p>\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from './types';\nimport { SortBy } from './types/SortBy';\n\nexport const filterPeople = (people: Person[], query: string) => {\n  const lowerQuery = query.toLowerCase();\n\n  return people.filter(({ name, motherName, fatherName }) => (\n    (name + motherName + fatherName).toLowerCase().includes(lowerQuery)\n  ));\n};\n\nexport const sortPeople = (\n  people: Person[],\n  sortOrder: string,\n  sortBy: string,\n) => {\n  const sortedPeople = [...people];\n  const numOrder = sortOrder === 'asc' ? 1 : -1;\n\n  switch (sortBy) {\n    case SortBy.Name:\n    case SortBy.Sex:\n      sortedPeople.sort((firstPerson, secondPerson) => (\n        firstPerson[sortBy].localeCompare(secondPerson[sortBy]) * numOrder\n      ));\n      break;\n\n    case SortBy.Born:\n    case SortBy.Died:\n      sortedPeople.sort((firstPerson, secondPerson) => (\n        (firstPerson[sortBy] - secondPerson[sortBy]) * numOrder\n      ));\n      break;\n\n    default:\n      break;\n  }\n\n  return sortedPeople;\n};\n","import {\n  ChangeEvent, FC, useCallback, useMemo, useState,\n} from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonRow } from '../PersonRow';\nimport { SortBy } from '../../types/SortBy';\n\nimport './PeopleTable.scss';\nimport { filterPeople, sortPeople } from '../../helpers';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const appliedQuery = searchParams.get('query') || '';\n  const [inputQuery, setInputQuery] = useState(appliedQuery);\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const applyQuery = useCallback(\n    debounce((query: string) => {\n      if (query || sortBy || sortOrder) {\n        setSearchParams({ query, sortBy, sortOrder });\n      } else {\n        setSearchParams({});\n      }\n    }, 500),\n    [sortBy, sortOrder],\n  );\n\n  const handleQueryChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setInputQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const handleSortChange = (sortByQuery: SortBy | '') => {\n    let appliedSortOrder = sortOrder;\n\n    if (sortBy !== sortByQuery) {\n      appliedSortOrder = 'desc';\n    }\n\n    setSearchParams({\n      query: appliedQuery,\n      sortBy: sortByQuery,\n      sortOrder: appliedSortOrder === 'asc' ? 'desc' : 'asc',\n    });\n  };\n\n  const visiblePeople = useMemo(() => {\n    const filtered = filterPeople(people, appliedQuery);\n\n    return sortPeople(filtered, sortOrder, sortBy);\n  }, [appliedQuery, sortBy, sortOrder]);\n\n  return (\n    <>\n      <div className=\"inputs-block is-flex is-flex-direction-column m-auto\">\n        <Link\n          className=\"button is-primary is-rounded m-2\"\n          to=\"/people/new\"\n        >\n          Add a new person\n        </Link>\n\n        <input\n          type=\"text\"\n          className=\"input is-primary is-rounded m-2\"\n          placeholder=\"Search\"\n          value={inputQuery}\n          onChange={handleQueryChange}\n        />\n      </div>\n\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            {['Name', 'Sex', 'Born', 'Died'].map(head => (\n              <th\n                key={head}\n                className={classNames(\n                  'PeopleTable__header-row sort-arrow', {\n                    [`sort-arrow--${sortOrder}`]: sortBy === head.toLowerCase(),\n                  },\n                )}\n                onClick={() => handleSortChange(head.toLowerCase() as SortBy)}\n              >\n                {head}\n              </th>\n            ))}\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visiblePeople.map(person => (\n            <PersonRow person={person} key={person.slug} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import {\n  createContext, FC, useEffect, useState,\n} from 'react';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\n\ninterface ContextProps {\n  people: Person[],\n  setPeople: (people: Person[]) => void,\n  errorMessage: string,\n}\n\nexport const PeopleContext = createContext<ContextProps>({\n  people: [],\n  setPeople: () => {},\n  errorMessage: '',\n});\n\nexport const PeopleProvider: FC = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    getPeople()\n      .then(data => {\n        const preparedPeople = data.map((person, _, arr) => ({\n          ...person,\n          mother: arr.find(mother => mother.name === person.motherName),\n          father: arr.find(father => father.name === person.fatherName),\n        }));\n\n        setPeople(preparedPeople);\n      })\n      .catch(setErrorMessage);\n  }, []);\n\n  const contextValue = {\n    people,\n    setPeople,\n    errorMessage,\n  };\n\n  return (\n    <PeopleContext.Provider value={contextValue}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","import { FC, useContext } from 'react';\nimport { PeopleTable } from '../PeopleTable';\nimport { PeopleContext } from '../PeopleContext';\n\nexport const PeoplePage: FC = () => {\n  const { people, errorMessage } = useContext(PeopleContext);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!errorMessage && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navbar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => (\n            classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )\n          )}\n          to=\"/\"\n        >\n          Home page\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => (\n            classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )\n          )}\n          to=\"people\"\n        >\n          People page\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import {\n  FC, FormEvent, memo, useContext, useMemo, useState,\n} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { PeopleContext } from '../PeopleContext';\nimport { Person } from '../../types';\nimport './NewPerson.scss';\n\nconst defaultPerson = {\n  name: '',\n  sex: '',\n  born: 0,\n  died: 0,\n  fatherName: '',\n  motherName: '',\n  slug: '',\n};\n\nexport const NewPerson: FC = memo(() => {\n  const { people, setPeople } = useContext(PeopleContext);\n  const [newPerson, setNewPerson] = useState(defaultPerson);\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n\n  const fathers = useMemo(() => (\n    people.filter(person => person.sex === 'm')\n  ), people);\n\n  const mothers = useMemo(() => (\n    people.filter(person => person.sex === 'f')\n  ), people);\n\n  const handleNewPersonData = (field: string, value: string | number) => {\n    setErrorMessage('');\n    setNewPerson({\n      ...newPerson,\n      [field]: value,\n    });\n  };\n\n  const isValidForm = () => {\n    if (/[^a-zA-Z ]/g.test(newPerson.name)) {\n      setErrorMessage('Name should contain only letters and spaces');\n\n      return false;\n    }\n\n    if (newPerson.died - newPerson.born > 150) {\n      setErrorMessage('died - born should be >= 0 and < 150');\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (isValidForm()) {\n      const { name, born } = newPerson;\n      const personToAdd: Person = {\n        ...newPerson,\n        slug: `${name.split(' ').join('-')}-${born}`,\n      };\n\n      setPeople([...people, personToAdd]);\n      setNewPerson(defaultPerson);\n      navigate('/people/');\n    }\n  };\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      {errorMessage && (\n        <div className=\"notification  is-danger\">\n          {errorMessage}\n        </div>\n      )}\n\n      <label className=\"field\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Name\"\n          required\n          value={newPerson.name}\n          onChange={(event) => {\n            handleNewPersonData('name', event.target.value);\n          }}\n        />\n      </label>\n\n      <div className=\"control\">\n        <label className=\"radio\">\n          Male\n          <input\n            required\n            type=\"radio\"\n            name=\"sex\"\n            value=\"m\"\n            checked={newPerson.sex === 'm'}\n            onChange={(event) => handleNewPersonData('sex', event.target.value)}\n            className=\"radio\"\n          />\n        </label>\n\n        <label className=\"radio\">\n          Female\n          <input\n            required\n            type=\"radio\"\n            name=\"sex\"\n            value=\"f\"\n            checked={newPerson.sex === 'f'}\n            onChange={(event) => handleNewPersonData('sex', event.target.value)}\n            className=\"radio\"\n          />\n        </label>\n      </div>\n\n      <label className=\"field\">\n        Born\n        <input\n          type=\"number\"\n          placeholder=\"Born year\"\n          value={newPerson.born}\n          min={1400}\n          max={new Date().getFullYear()}\n          onChange={(event) => {\n            handleNewPersonData('born', Number(event.target.value));\n          }}\n          className=\"input\"\n        />\n      </label>\n\n      <label className=\"field\">\n        Died\n        <input\n          type=\"number\"\n          placeholder=\"Death year\"\n          value={newPerson.died}\n          min={newPerson.born}\n          max={new Date().getFullYear()}\n          onChange={(event) => {\n            handleNewPersonData('died', Number(event.target.value));\n          }}\n          className=\"input\"\n          disabled={!newPerson.born}\n        />\n      </label>\n\n      <label className=\"select\">\n        <select\n          value={newPerson.fatherName}\n          onChange={event => {\n            handleNewPersonData('fatherName', event.target.value);\n          }}\n        >\n          <option value=\"\" disabled>Choose a father</option>\n          {fathers.map(({ name, slug }) => (\n            <option key={slug} value={name}>{name}</option>\n          ))}\n        </select>\n      </label>\n\n      <label className=\"select\">\n        <select\n          value={newPerson.motherName}\n          onChange={event => {\n            handleNewPersonData('motherName', event.target.value);\n          }}\n        >\n          <option value=\"\" disabled>Choose a mother</option>\n          {mothers.map(({ name, slug }) => (\n            <option key={slug} value={name}>{name}</option>\n          ))}\n        </select>\n      </label>\n\n      <button\n        className=\"button is-primary\"\n        type=\"submit\"\n        disabled={!newPerson.name || !newPerson.sex || !newPerson.born}\n      >\n        Add a new person\n      </button>\n    </form>\n  );\n});\n","import { FC } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport 'bulma';\nimport './App.scss';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\nimport { NewPerson } from './components/NewPerson';\nimport { PeopleProvider } from './components/PeopleContext';\n\nexport const App: FC = () => (\n  <PeopleProvider>\n    <div className=\"App\">\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"people/new\" element={<NewPerson />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  </PeopleProvider>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}